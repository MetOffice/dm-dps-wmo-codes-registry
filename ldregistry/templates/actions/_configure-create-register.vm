## Configure the register types available in create-register action

#set( $createRegisterTypes = [ "default", "scheme", "tree", "collection", "ontology" ] )
#set( $createRegisterTypeMap = {
    "default"    : { "label" : $msg['register.type.default.label'] },
    "scheme"     : { "label" : $msg['register.type.scheme.label'], "imembership" : "skos:inScheme", "type" : "skos:ConceptScheme" },
    "tree"       : { "label" : $msg['register.type.tree.label'], "imembership" : "skos:inScheme", "type" : "skos:ConceptScheme", "hChild" : "skos:narrower", "hRoot" :  "skos:topConceptOf" },
    "collection" : { "label" : $msg['register.type.collection.label'], "membership" : "skos:member", "type" : "skos:Collection" },
    "ontology"   : { "label" : $msg['register.type.ontology.label'], "imembership" : "rdfs:isDefinedBy", "type" : "owl:Ontology" }
} )

#set( $registerTagSets = [ "category", "owner", "entity", "licence" ] )
#set( $registerTagSepecs = {
    "category" : { "label" : $msg['register.category.description'], "register" : "/structure/category", "formField" : "category"},
    "owner"    : { "label" : $msg['register.owner.description'], "register" : "/structure/org", "formField" : "owner"},
    "entity"   : { "label" : $msg['register.entity.description'], "register" : "/structure/entity-type", "formField" : "entity"},
    "licence"   : { "label" : $msg['register.license.description'], "register" : "/structure/licence", "formField" : "licence"}
} )
